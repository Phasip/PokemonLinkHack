import time,binascii,sys
from modules import pkmn_pokedata,pkmn_chars,gblink
from modules.gblink import sendGb,sendUntil,wait_60,sync
#Run init, talk to trade center, press enter.


def send_pokemon_data(trainer_name,pokemon_trainer_name,pokemon_name,pokemon):
    sendGb(b"\xFD"*8 + b"\xAA"*9) #0xAA is our random numbers... I think
    sendGb(b"\xB2\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD")
    sendGb(pkmn_chars.string_to_gb(trainer_name,11))  #Actual displayed name
    sendGb(b"\x01") #Number of pokemon
    sendGb(bytes((pokemon.Pokemon,))) 
    sendGb(b"\xFF\x00\x00\x00\x00\x00")
    sendGb(pkmn_pokedata.get_pkmn_bytes(pokemon))
    #sendGb(b"\xB0\x00\x15\x00\x00\x14\x14\x2D\x0A\x2D\x00\x00\x46\xFA\x00\x00\xDD\x00\x4A\x00\x68\x00\x64\x00\x73\x00\x4B\x5A\xF2\x23\x28\x00\x00\x06\x00\x15\x03\x0B\x00\x0B\x00\x0E\x00")
    sendGb(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    sendGb(pkmn_chars.string_to_gb(pokemon_trainer_name,11)) # Pokemon trainer name
    sendGb(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    sendGb(pkmn_chars.string_to_gb(pokemon_name,11)) # Pokemon name
    sendGb(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00")
    sendGb(b"\x00\xFD\xFD\xFD\xFD\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
    
def init(arg):
    gblink.init(arg)
    sendUntil(b'\x01',b'\x02')
    sendGb(b"\x00\x00\x00")
    input("Press enter when waiting")
    sync()
    sendGb(b"\xD0"*2+b'\x00')
    sendGb(b"\xD4"*4)
    sendGb(b"\x00\xFE",0.05,False)
    wait_60()
    sync()


def sendMon(trainer,origtrainer,pokename,pokemon):
    send_pokemon_data(trainer,origtrainer,pokename,pokemon)
    wait_60() #Trade first pokemon (??)
    sync()
    wait_60(b"\x62") #Accept trade
    sync()

def abortTrade():
    send_pokemon_data("Abort","Abort","Abort",pkmn_pokedata.hmslave)
    wait_60(b"\x6f") #Abort trade?

def sendMons(trainer,pokelist):
    for (origtrainer,pokename,pokemon) in pokelist:
        sendMon(trainer,origtrainer,pokename,pokemon)
    abortTrade()
    
