import buspirate,time,binascii,pkmn_chars,bgb_master,sys,pkmn_pokedata
#Pre-req: Voltrob & SerialRecv tentacool & F8
#Result: Execute hall of fame animation (not clean)

bp = False
def sendDataByte(byte):
    global bp
    if bp == True:
        return buspirate.sendDataByte(byte)
        
    return bgb_master.sendDataByte(byte)

def sendGb(data,wait = 0.005,resend = True):
    ret = b''
    for i in data:
        val = sendDataByte(i)
        time.sleep(wait)
        while val == 0xFE and resend == True:
            val = sendDataByte(i)
            time.sleep(wait)
        ret = ret + bytes((val,))
        
    print("Sent: " + str(binascii.hexlify(data)))
    print("Recv: " + str(binascii.hexlify(ret)))
    return ret

def sendUntil(data,waitfor,wait = 0.02):
    retval = None
    while retval != waitfor:
        retval = sendGb(data,wait)
    return retval
    
if sys.argv[1] == "bp":
    bp = True
    print("Initializing real deal!")
    buspirate.bus_init()
else:
    bp = False
    print("Initializing emulator stuff...")
    bgb_master.init()
    time.sleep(1)





name = "Hack" # Name of player
sendUntil(b'\x01',b'\x02')
sendGb(b"\x00\x00\x00")
input("Press enter after using F8")

#06 1C # ld b,1c - Bank we want to use (1C)
#21 A0 41 # Place we want to call (41A0)
#CD D6 35 # Bank switch call
#C9 #Return
sent = 0
sendGb(b"\xFD"*20) # Sync function syncing
sendGb(b"\x00"*20) # Nop sled so I dont have to worry
sent = 40
sendGb(b'\x06\x1C\x21\xA0\x41\xCD\xD6\x35\xc9')
sent = sent +len(b'\x06\x1C\x21\xA0\x41\xCD\xD6\x35\xc9')
sendGb(b"\x00"*0x1A8)
